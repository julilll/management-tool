{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppTitle",
            "id": "interface-AppTitle-c88290210516f19d30e2cb126ff09d2a7746db01c2be29ac64e6a8368be705db0ff214696f7b40fbeccb01c61739d94920a604dc94cf68681a825a7502635bb7",
            "file": "src/design-system/title/title.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\n\nexport interface AppTitle {\n  size: 'small' | 'large';\n  content: string;\n}\n\n@Component({\n  selector: 'app-title',\n  template: `\n    <p [class]=\"getClasses()\">{{content()}}</p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  host: {\n    '[style.display]': '\"block\"'\n  }\n})\nexport class AppTitleComponent {\n  public size = input.required<AppTitle['size']>();\n  public content = input.required<AppTitle['content']>();\n\n  private textSize = computed(() => this.textSizes[this.size()]);\n\n  protected getClasses(): string {\n    return `${this.textSize()} text-app-bluish`\n  }\n\n  private textSizes: Record<AppTitle['size'], string> = {\n    small: 'text-xl font-medium',\n    large: 'text-2xl font-bold'\n  };\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"large\"",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Button",
            "id": "interface-Button-617a666823129762dfc18858e741f44a1b7bf3588c957e2b3ebd86364a6702421f403f60dacb1daec7caccc5aff5f54d411e13db74ea6c36515f3a3b4178a6c7",
            "file": "src/design-system/button/button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild, computed, input } from '@angular/core';\nimport { IconName } from '../icon/icon.interface';\nimport { IconComponent } from '../icon/icon.component';\nimport { NgClass, UpperCasePipe } from '@angular/common';\n\nexport interface Button {\n  type?: string;\n  color?: 'success';\n  content?: string;\n  icon?: IconName;\n}\n\n@Component({\n  selector: 'app-button',\n  template: `\n    <button [ngClass]=\"buttonClasses()\" [type]=\"type()\">\n      @if (icon()) {\n        <app-icon [size]=\"16\" [ngClass]=\"iconClasses()\" [name]=\"icon()\"/>\n        }\n      <p [ngClass]=\"color()? 'text-white': 'text-app-font-color'\">{{ content() | uppercase }}</p>\n    </button>\n  `,\n  imports: [IconComponent, NgClass, UpperCasePipe],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true\n})\nexport class ButtonComponent {\n  public color = input<Button['color']>();\n  public type = input<Button['type']>();\n  public content = input<Button['content']>();\n  public icon = input<Button['icon']>();\n\n  protected buttonClasses(): string {\n    return 'rounded-md py-3 px-10 border-2 flex items-center gap-2 ' + (this.color() ? 'bg-app-success' : '')\n  }\n\n  protected iconClasses(): string {\n    return this.color() ? \"fill-white\": \"fill-app-font-color\"\n  }\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconName",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ColorBox",
            "id": "interface-ColorBox-968f6ad3db7bc3777aefecb9485e2769e8c8ae95422c82cdb97939a5c821a19c3f52b5af21b7c9e057f1dd1e5a4c6fe9b257f069af147362ad804cac22480324",
            "file": "src/design-system/color-box/color-box.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit, Renderer2, input } from '@angular/core';\n\nexport interface ColorBox {\n  color: string;\n  size: number;\n}\n\n@Directive({\n  standalone: true,\n  selector: '[appColorBox]'\n})\nexport class ColorBoxDirective implements OnInit {\n  public color = input<ColorBox['color']>();\n  public size = input<ColorBox['size']>();\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'block');\n    this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.size()}px`);\n    this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.size()}px`);\n    this.renderer.setStyle(this.elementRef.nativeElement, 'background-color', this.color());\n    this.renderer.addClass(this.elementRef.nativeElement, 'rounded-lg');\n  }\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Icon",
            "id": "interface-Icon-d0bbe68974d90b73cc7d3ee8fdfabe0dd8016c1e66ee8e7280bfc28094492c1fb9d01ac47608c4857c5756ddff76aeab61552dea56b8ba68da45d94ef1354acd",
            "file": "src/design-system/icon/icon.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\nimport { IconName, icons } from './icon.interface';\n\nexport interface Icon {\n  color?: string;\n  size: number;\n  name?: IconName;\n}\n\n@Component({\n  selector: 'app-icon',\n  template: `\n    <svg viewBox=\"0 -960 960 960\">\n      @for (path of paths(); track $index) {\n        <path [attr.d]=\"path.d\"></path>\n      }\n    </svg>\n  `,\n  styles: `\n    :host {\n      display: flex;\n    }\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  host: {\n    '[style.fill]': 'color()',\n    '[style.width]': 'size() + \"px\"',\n    '[style.height]': 'size() + \"px\"',\n  }\n})\nexport class IconComponent {\n  public color = input<Icon['color']>();\n  public size = input.required<Icon['size']>();\n  public name = input.required<Icon['name']>();\n\n  protected paths = computed(() => icons.find(({name}) => name === this.name())?.paths);\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconName",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "InputField",
            "id": "interface-InputField-8c89e0d47628d8c3250937051feadf6313d97f14e223e696bb4d3d4f6b28e790d6bacd7bb7a6317ae26f57527721f23278af0849ff2ac8a4ae8d045b71737d7b",
            "file": "src/design-system/input-field/input-field.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, model, input, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IconName } from '../icon/icon.interface';\nimport { IconComponent } from '../icon/icon.component';\nimport { NgClass } from '@angular/common';\n\nexport interface InputField {\n  value: string;\n  prefix?: IconName;\n  label?: string;\n  id: string;\n  placeholder?: string;\n}\n\n@Component({\n  selector: 'app-input-field',\n  template: `\n    <div class=\"block relative\">\n      <label ></label>\n      @if (prefix()!) { <app-icon class=\"absolute inset-y-4 left-0 ml-4\" [name]=\"prefix()!\" [size]=\"32\" color=\"#CBCBCB\" /> }\n      <input\n        [ngClass]=\"{'w-full shadow-md p-5 placeholder:italic placeholder:text-black placeholder:text-base placeholder:font-extralight rounded-lg': true, 'pl-14': !!prefix()}\"\n        [id]=\"id()\"\n        [name]=\"id()\"\n        [placeholder]=\"placeholder()\"\n        [(ngModel)]=\"value\"\n        (keyup)=\"valueUpdatedEvent()\"/>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [FormsModule, IconComponent, NgClass],\n  standalone: true,\n  host: {\n    '[style.display]': '\"block\"'\n  }\n})\nexport class InputFieldComponent {\n  public value = model('');\n  public prefix = input<InputField['prefix']>();\n  public id = input.required<InputField['id']>();\n  public placeholder = input<InputField['placeholder']>();\n  public valueUpdated = output<InputField['value']>();\n\n  valueUpdatedEvent(): void {\n    this.valueUpdated.emit(this.value())\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconName",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Item",
            "id": "interface-Item-558e941714d4bc538268ea0f0257c3636389cb161d07f94b2bd818242aeda40798a083d7810b11206c13d4b132d57df2082655607bfc577ee983c2cbd82c5984",
            "file": "src/shared/item-models.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Item {\n  id: string,\n  name: string,\n  description: string,\n  color: string,\n  _doc: string,\n  _dlu?: string,\n  _cbu: string\n}\n\nexport type ViewMode = 'list' | 'grid';\n",
            "properties": [
                {
                    "name": "_cbu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "_dlu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "_doc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Modal",
            "id": "interface-Modal-e7911510157597d6f9a87ad94e1eb10c1e6a38255c007aa4c757903ad8e7c510b5c2a559e064e44c4f00b5d8e0681f0d6348a29981cff0dd850433dbd8f9f4db",
            "file": "src/design-system/modal/modal.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Renderer2, Signal, input, model, output, signal } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppTitleComponent } from '../title/title.component';\nimport { IconComponent } from '../icon/icon.component';\nimport { Item } from '../../shared/item-models.interface';\nimport { ButtonComponent } from '../button/button.component';\n\nexport interface Modal {\n  isOpen: boolean;\n  form: Item;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.component.html',\n  styleUrl: 'modal.component.scss',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, AppTitleComponent, IconComponent, ButtonComponent]\n})\n\nexport class ModalComponent {\n  public isOpen = model<Modal['isOpen']>(false);\n  public formSubmit = output();\n  public form!: FormGroup;\n\n  public newItem: boolean = true;\n  private item!: Item | {};\n\n  constructor(private fb: FormBuilder, private renderer: Renderer2) {\n    this.form = this.fb.group({\n      name: new FormControl('', Validators.required),\n      description: new FormControl('',Validators.required),\n      color: new FormControl('#000000',Validators.required),\n    });\n  }\n\n  openModal(initialValues?: Item) {\n    if (initialValues) {\n      this.item = initialValues;\n      this.newItem = false;\n      this.form.setValue({ name: initialValues.name, description: initialValues.description, color: initialValues.color });\n    }\n    this.isOpen.set(true);\n  }\n\n  closeModal() {\n    this.form.reset({ name: '', description: '', color: '#000000'});\n    this.newItem = true;\n    this.item = {};\n    this.isOpen.set(false);\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.formSubmit.emit({...this.item, ...this.form.value});\n      this.closeModal();\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Table",
            "id": "interface-Table-a4d86a287245c4052256cc968fc9e098b1a4f9c37d25f8044d5498260d4aa4417207cf718be90aa28b0dab3a6ed127df8a2dab86a1174b94c6e67f9f6a67d2aa",
            "file": "src/design-system/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, computed, inject, output } from '@angular/core';\nimport { TableHeaderComponent } from './header/table-header.component';\nimport { TableRowComponent } from './row/table-row.component';\nimport { TablePaginatorComponent } from './paginator/table-pagination.component';\nimport { Item } from '../../shared/item-models.interface';\n\nexport interface Table {\n  items: Item[];\n}\n\n@Component({\n  selector: 'app-table',\n  templateUrl: 'table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TableHeaderComponent, TableRowComponent, TablePaginatorComponent],\n  standalone: true\n})\nexport class TableComponent {\n  public items = input.required<Table['items']>();\n  public updateItem = output<Item>();\n}\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Table",
            "id": "interface-Table-4aafdaefbca76abe8d95f4f499d7a0e46458eb257d8f20d7ec2f77f64d93286ec75ed7ce43f702ae297636e94089a1f25a75a6c89b56fa6699fdd1d1c314fa11-1",
            "file": "src/design-system/tiles/tiles.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, computed, inject, output } from '@angular/core';\nimport { Item } from '../../shared/item-models.interface';\nimport { TablePaginatorComponent } from '../table/paginator/table-pagination.component';\nimport { TileCardComponent } from './tile-card/tile-card.component';\n\nexport interface Table {\n  items: Item[];\n}\n\n@Component({\n  selector: 'app-tiles',\n  templateUrl: 'tiles.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TablePaginatorComponent, TileCardComponent],\n  standalone: true\n})\nexport class TilesComponent {\n  public items = input.required<Table['items']>();\n  public updateItem = output<Item>();\n}\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Table-1"
        },
        {
            "name": "TableRow",
            "id": "interface-TableRow-0881e96734d63fa8f405b372e5b7f6e904a8ffb54e3fb8134f9d785e68b3533218fa2f5a64c94963e1eaea4b4099fe5cece558cf3b1d30d38cc5496e302ff17f",
            "file": "src/design-system/table/row/table-row.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild, computed, input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Item } from '../../../shared/item-models.interface';\nimport { ColorBoxDirective } from '../../color-box/color-box.directive';\n\nexport interface TableRow {\n  item: Item;\n}\n\n@Component({\n  selector: 'app-table-row',\n  templateUrl: 'table-row.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [DatePipe, ColorBoxDirective],\n  standalone: true\n})\nexport class TableRowComponent {\n  public item = input.required<TableRow['item']>();\n}\n",
            "properties": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TileCard",
            "id": "interface-TileCard-59026bda238c2e610b355f6b79bc7640b9a76fa32186b3fb2258660b962f5253e6aa190f85d6a15557d539716a205f4f5b93b0e64ab56caa2294e6964bdc9bc6",
            "file": "src/design-system/tiles/tile-card/tile-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\nimport { Item } from '../../../shared/item-models.interface';\nimport { ColorBoxDirective } from '../../color-box/color-box.directive';\n\nexport interface TileCard {\n  item: Item;\n}\n\n@Component({\n  selector: 'app-tile-card',\n  templateUrl: 'tile-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ColorBoxDirective],\n  standalone: true,\n  host: {\n    '[style.display]': '\"inline-block\"'\n  }})\nexport class TileCardComponent {\n  public item = input.required<TileCard['item']>();\n}\n",
            "properties": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "HttpService",
            "id": "injectable-HttpService-de6e4bf7dce7fcec7e78681c281bb8e6b2a2a8db1bf2c89ad04a9e407ee0e7daa04dc819b4154a92fe078e595da2d659fda4d48220988287cd6a4a05e51946fa",
            "file": "src/services/http.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Item>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Item[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Item>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { Item } from '../shared/item-models.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  private apiUrl = 'http://localhost:3000/items';\n\n  constructor(private http: HttpClient) {}\n\n  getItems(): Observable<Item[]> {\n    return this.http.get<Item[]>(this.apiUrl).pipe(catchError((error: any) => {throw error.message}))\n  }\n\n  addItem(item: Item): Observable<Item> {\n    return this.http.post<Item>(this.apiUrl, item).pipe(catchError((error: any) => {throw error.message}));\n  }\n\n  updateItem(item: Item): Observable<Item> {\n    return this.http.put<Item>(`${this.apiUrl}/${item.id}`, item).pipe(catchError((error: any) => {throw error.message}));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "ColorBoxDirective",
            "id": "directive-ColorBoxDirective-968f6ad3db7bc3777aefecb9485e2769e8c8ae95422c82cdb97939a5c821a19c3f52b5af21b7c9e057f1dd1e5a4c6fe9b257f069af147362ad804cac22480324",
            "file": "src/design-system/color-box/color-box.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit, Renderer2, input } from '@angular/core';\n\nexport interface ColorBox {\n  color: string;\n  size: number;\n}\n\n@Directive({\n  standalone: true,\n  selector: '[appColorBox]'\n})\nexport class ColorBoxDirective implements OnInit {\n  public color = input<ColorBox['color']>();\n  public size = input<ColorBox['size']>();\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'block');\n    this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.size()}px`);\n    this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.size()}px`);\n    this.renderer.setStyle(this.elementRef.nativeElement, 'background-color', this.color());\n    this.renderer.addClass(this.elementRef.nativeElement, 'rounded-lg');\n  }\n}\n",
            "selector": "[appColorBox]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "input<ColorBox['color']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "input<ColorBox['size']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7ca44e7921e32cc428e05a88d4c1780e7506ef7a28e56a798375a711777730916f4d9681f665a492282020eecbdf494c7ccf648668acc74679fd26ed2eae910",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"px-16 pt-7\">\n  <router-outlet />\n</div>\n"
        },
        {
            "name": "AppTitleComponent",
            "id": "component-AppTitleComponent-c88290210516f19d30e2cb126ff09d2a7746db01c2be29ac64e6a8368be705db0ff214696f7b40fbeccb01c61739d94920a604dc94cf68681a825a7502635bb7",
            "file": "src/design-system/title/title.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-title",
            "styleUrls": [],
            "styles": [],
            "template": "<p [class]=\"getClasses()\">{{content()}}</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "input.required<AppTitle['content']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "input.required<AppTitle['size']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "textSize",
                    "defaultValue": "computed(() => this.textSizes[this.size()])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "textSizes",
                    "defaultValue": "{\n    small: 'text-xl font-medium',\n    large: 'text-2xl font-bold'\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record< | string>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\n\nexport interface AppTitle {\n  size: 'small' | 'large';\n  content: string;\n}\n\n@Component({\n  selector: 'app-title',\n  template: `\n    <p [class]=\"getClasses()\">{{content()}}</p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  host: {\n    '[style.display]': '\"block\"'\n  }\n})\nexport class AppTitleComponent {\n  public size = input.required<AppTitle['size']>();\n  public content = input.required<AppTitle['content']>();\n\n  private textSize = computed(() => this.textSizes[this.size()]);\n\n  protected getClasses(): string {\n    return `${this.textSize()} text-app-bluish`\n  }\n\n  private textSizes: Record<AppTitle['size'], string> = {\n    small: 'text-xl font-medium',\n    large: 'text-2xl font-bold'\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-617a666823129762dfc18858e741f44a1b7bf3588c957e2b3ebd86364a6702421f403f60dacb1daec7caccc5aff5f54d411e13db74ea6c36515f3a3b4178a6c7",
            "file": "src/design-system/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button [ngClass]=\"buttonClasses()\" [type]=\"type()\">\n  @if (icon()) {\n    <app-icon [size]=\"16\" [ngClass]=\"iconClasses()\" [name]=\"icon()\"/>\n    }\n  <p [ngClass]=\"color()? 'text-white': 'text-app-font-color'\">{{ content() | uppercase }}</p>\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "input<Button['color']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "content",
                    "defaultValue": "input<Button['content']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "input<Button['icon']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "input<Button['type']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "buttonClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "iconClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "UpperCasePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild, computed, input } from '@angular/core';\nimport { IconName } from '../icon/icon.interface';\nimport { IconComponent } from '../icon/icon.component';\nimport { NgClass, UpperCasePipe } from '@angular/common';\n\nexport interface Button {\n  type?: string;\n  color?: 'success';\n  content?: string;\n  icon?: IconName;\n}\n\n@Component({\n  selector: 'app-button',\n  template: `\n    <button [ngClass]=\"buttonClasses()\" [type]=\"type()\">\n      @if (icon()) {\n        <app-icon [size]=\"16\" [ngClass]=\"iconClasses()\" [name]=\"icon()\"/>\n        }\n      <p [ngClass]=\"color()? 'text-white': 'text-app-font-color'\">{{ content() | uppercase }}</p>\n    </button>\n  `,\n  imports: [IconComponent, NgClass, UpperCasePipe],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true\n})\nexport class ButtonComponent {\n  public color = input<Button['color']>();\n  public type = input<Button['type']>();\n  public content = input<Button['content']>();\n  public icon = input<Button['icon']>();\n\n  protected buttonClasses(): string {\n    return 'rounded-md py-3 px-10 border-2 flex items-center gap-2 ' + (this.color() ? 'bg-app-success' : '')\n  }\n\n  protected iconClasses(): string {\n    return this.color() ? \"fill-white\": \"fill-app-font-color\"\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-d0bbe68974d90b73cc7d3ee8fdfabe0dd8016c1e66ee8e7280bfc28094492c1fb9d01ac47608c4857c5756ddff76aeab61552dea56b8ba68da45d94ef1354acd",
            "file": "src/design-system/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      display: flex;\n    }\n  "
            ],
            "template": "<svg viewBox=\"0 -960 960 960\">\n  @for (path of paths(); track $index) {\n    <path [attr.d]=\"path.d\"></path>\n  }\n</svg>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "input<Icon['color']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "input.required<Icon['name']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "paths",
                    "defaultValue": "computed(() => icons.find(({name}) => name === this.name())?.paths)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "input.required<Icon['size']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\nimport { IconName, icons } from './icon.interface';\n\nexport interface Icon {\n  color?: string;\n  size: number;\n  name?: IconName;\n}\n\n@Component({\n  selector: 'app-icon',\n  template: `\n    <svg viewBox=\"0 -960 960 960\">\n      @for (path of paths(); track $index) {\n        <path [attr.d]=\"path.d\"></path>\n      }\n    </svg>\n  `,\n  styles: `\n    :host {\n      display: flex;\n    }\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  host: {\n    '[style.fill]': 'color()',\n    '[style.width]': 'size() + \"px\"',\n    '[style.height]': 'size() + \"px\"',\n  }\n})\nexport class IconComponent {\n  public color = input<Icon['color']>();\n  public size = input.required<Icon['size']>();\n  public name = input.required<Icon['name']>();\n\n  protected paths = computed(() => icons.find(({name}) => name === this.name())?.paths);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      display: flex;\n    }\n  \n",
            "extends": []
        },
        {
            "name": "InputFieldComponent",
            "id": "component-InputFieldComponent-8c89e0d47628d8c3250937051feadf6313d97f14e223e696bb4d3d4f6b28e790d6bacd7bb7a6317ae26f57527721f23278af0849ff2ac8a4ae8d045b71737d7b",
            "file": "src/design-system/input-field/input-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-field",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"block relative\">\n  <label ></label>\n  @if (prefix()!) { <app-icon class=\"absolute inset-y-4 left-0 ml-4\" [name]=\"prefix()!\" [size]=\"32\" color=\"#CBCBCB\" /> }\n  <input\n    [ngClass]=\"{'w-full shadow-md p-5 placeholder:italic placeholder:text-black placeholder:text-base placeholder:font-extralight rounded-lg': true, 'pl-14': !!prefix()}\"\n    [id]=\"id()\"\n    [name]=\"id()\"\n    [placeholder]=\"placeholder()\"\n    [(ngModel)]=\"value\"\n    (keyup)=\"valueUpdatedEvent()\"/>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "input.required<InputField['id']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "placeholder",
                    "defaultValue": "input<InputField['placeholder']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "prefix",
                    "defaultValue": "input<InputField['prefix']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "model('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "valueUpdated",
                    "defaultValue": "output<InputField['value']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "valueUpdatedEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, model, input, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IconName } from '../icon/icon.interface';\nimport { IconComponent } from '../icon/icon.component';\nimport { NgClass } from '@angular/common';\n\nexport interface InputField {\n  value: string;\n  prefix?: IconName;\n  label?: string;\n  id: string;\n  placeholder?: string;\n}\n\n@Component({\n  selector: 'app-input-field',\n  template: `\n    <div class=\"block relative\">\n      <label ></label>\n      @if (prefix()!) { <app-icon class=\"absolute inset-y-4 left-0 ml-4\" [name]=\"prefix()!\" [size]=\"32\" color=\"#CBCBCB\" /> }\n      <input\n        [ngClass]=\"{'w-full shadow-md p-5 placeholder:italic placeholder:text-black placeholder:text-base placeholder:font-extralight rounded-lg': true, 'pl-14': !!prefix()}\"\n        [id]=\"id()\"\n        [name]=\"id()\"\n        [placeholder]=\"placeholder()\"\n        [(ngModel)]=\"value\"\n        (keyup)=\"valueUpdatedEvent()\"/>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [FormsModule, IconComponent, NgClass],\n  standalone: true,\n  host: {\n    '[style.display]': '\"block\"'\n  }\n})\nexport class InputFieldComponent {\n  public value = model('');\n  public prefix = input<InputField['prefix']>();\n  public id = input.required<InputField['id']>();\n  public placeholder = input<InputField['placeholder']>();\n  public valueUpdated = output<InputField['value']>();\n\n  valueUpdatedEvent(): void {\n    this.valueUpdated.emit(this.value())\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ManagementToolComponent",
            "id": "component-ManagementToolComponent-100c971892f40ffea30b2e8b2bdb616b56219abc0684e73c0ec840aca094ce690b46469a5de19a8e93dc877a88dbb966daaa0b3e5720cc21d70eb350f54d8c14",
            "file": "src/app/pages/management-tool/management-tool.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ItemsStore"
                }
            ],
            "selector": "management-tool-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./management-tool.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_filter",
                    "defaultValue": "computed(() => this.store.filter())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "_view",
                    "defaultValue": "computed(() => this.store.view())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalComponent",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ModalComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "store",
                    "defaultValue": "inject(ItemsStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeView",
                    "args": [
                        {
                            "name": "viewMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "viewMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterItems",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormSubmit",
                    "args": [
                        {
                            "name": "values",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "event",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                },
                {
                    "name": "AppTitleComponent",
                    "type": "component"
                },
                {
                    "name": "InputFieldComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "TilesComponent",
                    "type": "component"
                },
                {
                    "name": "ModalComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Signal, ViewChild, computed, effect, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TableComponent } from '../../../design-system/table/table.component';\nimport { ItemsStore } from '../../../shared/items.store';\nimport { AppTitleComponent } from '../../../design-system/title/title.component';\nimport { InputFieldComponent } from '../../../design-system/input-field/input-field.component';\nimport { patchState } from '@ngrx/signals';\nimport { IconComponent } from '../../../design-system/icon/icon.component';\nimport { NgClass } from '@angular/common';\nimport { TilesComponent } from '../../../design-system/tiles/tiles.component';\nimport { Item, ViewMode } from '../../../shared/item-models.interface';\nimport { ModalComponent } from '../../../design-system/modal/modal.component';\n\n@Component({\n  selector: 'management-tool-page',\n  standalone: true,\n  imports: [RouterOutlet, TableComponent, AppTitleComponent, InputFieldComponent, IconComponent, NgClass, TilesComponent, ModalComponent],\n  providers: [ItemsStore],\n  templateUrl: './management-tool.component.html'\n})\nexport class ManagementToolComponent {\n  @ViewChild(ModalComponent) modal!: ModalComponent;\n  readonly store = inject(ItemsStore);\n  public readonly _filter = computed(() => this.store.filter());\n  public readonly _view = computed(() => this.store.view());\n\n  constructor() {\n    this.store.loadAll()\n  }\n\n  filterItems(event: string): void {\n    patchState(this.store, { filter: event })\n  }\n\n  changeView(viewMode: ViewMode): void {\n    patchState(this.store, { view: viewMode })\n  }\n\n  createItem() {\n    this.modal.openModal();\n  }\n\n  updateItem(event: Item) {\n    this.modal.openModal(event);\n  }\n\n  handleFormSubmit(values: any) {\n    if (!values?.id) {\n      this.store.addItem(values)\n    } else {\n      this.store.updateItem(values)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "extends": [],
            "templateData": "<div class=\"flex mb-7 items-center gap-3\">\n  <app-title class=\"flex-1\" size=\"large\" content=\"Management tool\" />\n  <button (click)=\"changeView('grid')\">\n    <app-icon\n      name=\"grid_view\"\n      [size]=\"32\"\n      [ngClass]=\"{\n        'fill-app-grey-basic': _view() === 'list',\n        'hover:fill-app-bluish': true,\n        'fill-app-blue': _view() === 'grid' }\"\n      />\n  </button>\n  <button (click)=\"changeView('list')\">\n    <app-icon\n      name=\"list_view\"\n      [size]=\"32\"\n      [ngClass]=\"{\n        'fill-app-grey-basic': _view() === 'grid',\n        'hover:fill-app-bluish': true,\n        'fill-app-blue': _view() === 'list' }\"\n      />\n  </button>\n  <button (click)=\"createItem()\">\n    <app-icon name=\"add\" class=\"fill-app-grey-basic hover:fill-app-bluish\" [size]=\"42\" />\n  </button>\n</div>\n<div class=\"block relative\">\n  <app-input-field id=\"searchbar\" placeholder=\"Find by name...\" class=\"mb-7\" [value]=\"_filter()\" (valueUpdated)=\"filterItems($event)\" prefix=\"search\" />\n</div>\n@if (store.isLoading()) {\n<p>Loading...</p>\n} @else {\n  @if (_view() === 'list') {\n    <app-table [items]=\"store.processedItems()\" (updateItem)=\"updateItem($event)\"/>\n  } @else {\n    <app-tiles [items]=\"store.processedItems()\" (updateItem)=\"updateItem($event)\"/>\n  }\n}\n<app-modal (formSubmit)=\"handleFormSubmit($event)\"/>\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-e7911510157597d6f9a87ad94e1eb10c1e6a38255c007aa4c757903ad8e7c510b5c2a559e064e44c4f00b5d8e0681f0d6348a29981cff0dd850433dbd8f9f4db",
            "file": "src/design-system/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "formSubmit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "formSubmit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "isOpen",
                    "defaultValue": "model<Modal['isOpen']>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item | literal type",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "newItem",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "initialValues",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "initialValues",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "AppTitleComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Renderer2, Signal, input, model, output, signal } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppTitleComponent } from '../title/title.component';\nimport { IconComponent } from '../icon/icon.component';\nimport { Item } from '../../shared/item-models.interface';\nimport { ButtonComponent } from '../button/button.component';\n\nexport interface Modal {\n  isOpen: boolean;\n  form: Item;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.component.html',\n  styleUrl: 'modal.component.scss',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, AppTitleComponent, IconComponent, ButtonComponent]\n})\n\nexport class ModalComponent {\n  public isOpen = model<Modal['isOpen']>(false);\n  public formSubmit = output();\n  public form!: FormGroup;\n\n  public newItem: boolean = true;\n  private item!: Item | {};\n\n  constructor(private fb: FormBuilder, private renderer: Renderer2) {\n    this.form = this.fb.group({\n      name: new FormControl('', Validators.required),\n      description: new FormControl('',Validators.required),\n      color: new FormControl('#000000',Validators.required),\n    });\n  }\n\n  openModal(initialValues?: Item) {\n    if (initialValues) {\n      this.item = initialValues;\n      this.newItem = false;\n      this.form.setValue({ name: initialValues.name, description: initialValues.description, color: initialValues.color });\n    }\n    this.isOpen.set(true);\n  }\n\n  closeModal() {\n    this.form.reset({ name: '', description: '', color: '#000000'});\n    this.newItem = true;\n    this.item = {};\n    this.isOpen.set(false);\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.formSubmit.emit({...this.item, ...this.form.value});\n      this.closeModal();\n    }\n  }\n}\n",
            "styleUrl": "modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "@if (isOpen()) {\n<div class=\"fixed flex top-0 left-0 w-full h-full justify-end\" (click)=\"closeModal()\">\n  <div class=\"w-2/5 bg-app-modal-bg shadow-xl px-20 py-10 flex flex-col h-100\" (click)=\"$event.stopPropagation()\">\n    <div class=\"flex mb-10 justify-between\">\n      <app-title [content]=\"newItem ? 'Create New' : 'Update'\" size=\"large\" />\n      <button (click)=\"closeModal()\">\n        <app-icon name=\"close\" [size]=\"32\" class=\"fill-app-bluish\" />\n      </button>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"flex-1 flex flex-col\">\n      <div class=\"flex gap-3 mb-5\">\n        <div class=\"flex-1\">\n          <label for=\"name\">Name</label>\n          <input #autofocus id=\"name\" type=\"text\" name=\"name\" formControlName=\"name\" placeholder=\"Type tag name...\">\n        </div>\n        <div>\n          <label for=\"color\">Color</label>\n          <input class=\"w-10 h-10\" id=\"color\" name=\"color\" type=\"color\" formControlName=\"color\">\n        </div>\n      </div>\n      <div>\n        <label for=\"description\">Tag description</label>\n        <textarea rows=\"4\" id=\"description\" name=\"de\" formControlName=\"description\" placeholder=\"Type tag description...\"></textarea>\n      </div>\n      <div class=\"flex justify-between mt-auto\">\n        <app-button content=\"cancel\" (click)=\"closeModal()\"/>\n        <app-button type=\"submit\" content=\"save\" icon=\"save\" color=\"success\"/>\n      </div>\n    </form>\n  </div>\n</div>\n}\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-a4d86a287245c4052256cc968fc9e098b1a4f9c37d25f8044d5498260d4aa4417207cf718be90aa28b0dab3a6ed127df8a2dab86a1174b94c6e67f9f6a67d2aa",
            "file": "src/design-system/table/table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "updateItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "input.required<Table['items']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "updateItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TableHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "TableRowComponent",
                    "type": "component"
                },
                {
                    "name": "TablePaginatorComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, computed, inject, output } from '@angular/core';\nimport { TableHeaderComponent } from './header/table-header.component';\nimport { TableRowComponent } from './row/table-row.component';\nimport { TablePaginatorComponent } from './paginator/table-pagination.component';\nimport { Item } from '../../shared/item-models.interface';\n\nexport interface Table {\n  items: Item[];\n}\n\n@Component({\n  selector: 'app-table',\n  templateUrl: 'table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TableHeaderComponent, TableRowComponent, TablePaginatorComponent],\n  standalone: true\n})\nexport class TableComponent {\n  public items = input.required<Table['items']>();\n  public updateItem = output<Item>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-table-header class=\"mb-3 block\"/>\n@for (item of items(); track item) {\n  <app-table-row [item]=\"item\" class=\"mb-3 block\" (click)=\"updateItem.emit(item)\"/>\n}\n<app-table-paginator/>\n"
        },
        {
            "name": "TableHeaderComponent",
            "id": "component-TableHeaderComponent-74e84f78ef46b98e690475c11373d0a590f8f336fecbf6aad1adc6c8928b1c06ec94011510093a55b8d80c96961a1d0da79ef9cc5a8c32fe83d3d4b4e8f6a083",
            "file": "src/design-system/table/header/table-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-header",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-row gap-2 w-full font-extralight px-5\">\n  <p class=\"basis-2/12\">Color</p>\n  <p class=\"basis-full cursor-pointer\" (click)=\"changeOrder()\">{{_sort() === 'asc' ? '&#8595;' : '&#8593;'}} Name</p>\n  <p class=\"basis-3/12\">Create Date</p>\n  <p class=\"basis-3/12\">Last Update</p>\n  <p class=\"basis-3/12\">Created By</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_sort",
                    "defaultValue": "computed(() => this.store.sort())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "store",
                    "defaultValue": "inject(ItemsStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeOrder",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, inject, input } from '@angular/core';\nimport { IconComponent } from '../../icon/icon.component';\nimport { patchState } from '@ngrx/signals';\nimport { ItemsStore } from '../../../shared/items.store';\n\n@Component({\n  selector: 'app-table-header',\n  template: `\n    <div class=\"flex flex-row gap-2 w-full font-extralight px-5\">\n      <p class=\"basis-2/12\">Color</p>\n      <p class=\"basis-full cursor-pointer\" (click)=\"changeOrder()\">{{_sort() === 'asc' ? '&#8595;' : '&#8593;'}} Name</p>\n      <p class=\"basis-3/12\">Create Date</p>\n      <p class=\"basis-3/12\">Last Update</p>\n      <p class=\"basis-3/12\">Created By</p>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [IconComponent],\n  standalone: true\n})\nexport class TableHeaderComponent {\n  readonly store = inject(ItemsStore);\n\n  public readonly _sort = computed(() => this.store.sort());\n\n  changeOrder(): void {\n    patchState(this.store, { sort: this._sort() === 'asc' ? 'des' : 'asc'})\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TablePaginatorComponent",
            "id": "component-TablePaginatorComponent-ea488ca1eed99c03d59c2eed490036803f13c6978837822a8eaf61a524216d87ea03d61c10193866f62602a2694a2d0e7fee968d5955f6383eb1dcb9990fc19b",
            "file": "src/design-system/table/paginator/table-pagination.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "table-paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_currentPage",
                    "defaultValue": "computed(() => this.store.currentPage())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "_itemsPerPage",
                    "defaultValue": "computed(() => this.store.itemsPerPage())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "store",
                    "defaultValue": "inject(ItemsStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "totalPages",
                    "defaultValue": "computed(() => Math.ceil(this.store.items().length / this._itemsPerPage()) - 1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changed",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "previousPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "toTheEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "toTheStart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, inject, input } from '@angular/core';\nimport { patchState } from '@ngrx/signals';\nimport { IconComponent } from '../../icon/icon.component';\nimport { ItemsStore } from '../../../shared/items.store';\n\n@Component({\n  selector: 'app-table-paginator',\n  templateUrl: 'table-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [IconComponent],\n  standalone: true\n})\nexport class TablePaginatorComponent {\n  readonly store = inject(ItemsStore);\n\n  public readonly _currentPage = computed(() => this.store.currentPage());\n  public readonly _itemsPerPage = computed(() => this.store.itemsPerPage());\n\n  protected totalPages = computed(() => Math.ceil(this.store.items().length / this._itemsPerPage()) - 1)\n\n  protected changed(event: Event) {\n    const selectElement = event.target as HTMLSelectElement;\n    patchState(this.store, { itemsPerPage: +selectElement?.value })\n  }\n  protected nextPage(): void {\n    patchState(this.store, { currentPage: this._currentPage() + 1 })\n  }\n\n  protected previousPage(): void {\n    patchState(this.store, { currentPage: this._currentPage() - 1 })\n  }\n\n  protected toTheStart(): void {\n    patchState(this.store, { currentPage: 0 })\n  }\n\n  protected toTheEnd(): void {\n    patchState(this.store, { currentPage: this.totalPages() })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex items-center\">\n  <select class=\"me-2\" id=\"number_of_items\" (change)=\"changed($event)\">\n    <option value=\"5\" [selected]=\"_itemsPerPage() === 5\">5</option>\n    <option value=\"10\" [selected]=\"_itemsPerPage() === 10\">10</option>\n    <option value=\"20\" [selected]=\"_itemsPerPage() === 20\">20</option>\n  </select>\n  <p class=\"flex-1\">Items per page</p>\n  <button [disabled]=\"_currentPage() === 0\" (click)=\"toTheStart()\">\n    <app-icon name=\"first_page\" [size]=\"32\" [color]=\"_currentPage() === 0 ? 'grey': 'black'\" /></button>\n  <button [disabled]=\"_currentPage() === 0\" (click)=\"previousPage()\">\n    <app-icon name=\"arrow_left\" [size]=\"32\" [color]=\"_currentPage() === 0 ? 'grey': 'black'\" /></button>\n  <p>{{_currentPage() + 1}}</p>\n  <button [disabled]=\"_currentPage() === totalPages()\" (click)=\"nextPage()\">\n    <app-icon name=\"arrow_right\" [size]=\"32\" [color]=\"_currentPage() === totalPages() ? 'grey': 'black'\" /></button>\n  <button [disabled]=\"_currentPage() === totalPages()\" (click)=\"toTheEnd()\">\n    <app-icon name=\"last_page\" [size]=\"32\" [color]=\"_currentPage() === totalPages() ? 'grey': 'black'\" /></button>\n</div>\n"
        },
        {
            "name": "TableRowComponent",
            "id": "component-TableRowComponent-0881e96734d63fa8f405b372e5b7f6e904a8ffb54e3fb8134f9d785e68b3533218fa2f5a64c94963e1eaea4b4099fe5cece558cf3b1d30d38cc5496e302ff17f",
            "file": "src/design-system/table/row/table-row.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-row",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "table-row.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "item",
                    "defaultValue": "input.required<TableRow['item']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DatePipe",
                    "type": "pipe"
                },
                {
                    "name": "ColorBoxDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild, computed, input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Item } from '../../../shared/item-models.interface';\nimport { ColorBoxDirective } from '../../color-box/color-box.directive';\n\nexport interface TableRow {\n  item: Item;\n}\n\n@Component({\n  selector: 'app-table-row',\n  templateUrl: 'table-row.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [DatePipe, ColorBoxDirective],\n  standalone: true\n})\nexport class TableRowComponent {\n  public item = input.required<TableRow['item']>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-row gap-2 w-full text-xl font-extralight text-app-font-color bg-white shadow-md rounded-lg p-5 cursor-pointer\">\n  <div class=\"basis-2/12\">\n    <div appColorBox [color]=\"item().color\" [size]=\"32\"></div>\n  </div>\n  <p class=\"basis-full\">{{ item().name }}</p>\n  <p class=\"basis-3/12\">{{ item()._doc | date: 'dd/MM/yyyy' }}</p>\n  <p class=\"basis-3/12\">{{ item()._dlu | date: 'dd/MM/yyyy' }}</p>\n  <p class=\"basis-3/12\">{{ item()._cbu }}</p>\n</div>\n"
        },
        {
            "name": "TileCardComponent",
            "id": "component-TileCardComponent-59026bda238c2e610b355f6b79bc7640b9a76fa32186b3fb2258660b962f5253e6aa190f85d6a15557d539716a205f4f5b93b0e64ab56caa2294e6964bdc9bc6",
            "file": "src/design-system/tiles/tile-card/tile-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tile-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "tile-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "item",
                    "defaultValue": "input.required<TileCard['item']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ColorBoxDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\nimport { Item } from '../../../shared/item-models.interface';\nimport { ColorBoxDirective } from '../../color-box/color-box.directive';\n\nexport interface TileCard {\n  item: Item;\n}\n\n@Component({\n  selector: 'app-tile-card',\n  templateUrl: 'tile-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ColorBoxDirective],\n  standalone: true,\n  host: {\n    '[style.display]': '\"inline-block\"'\n  }})\nexport class TileCardComponent {\n  public item = input.required<TileCard['item']>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"shadow-md block cursor-pointer\">\n  <div class=\"py-9 px-12 bg-white\">\n    <div appColorBox [color]=\"item().color\" [size]=\"100\"></div>\n  </div>\n  <div class=\"py-3 bg-app-grey-bg\">\n    <p class=\"text-center text-app-font-color\">{{ item().name }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "TilesComponent",
            "id": "component-TilesComponent-4aafdaefbca76abe8d95f4f499d7a0e46458eb257d8f20d7ec2f77f64d93286ec75ed7ce43f702ae297636e94089a1f25a75a6c89b56fa6699fdd1d1c314fa11",
            "file": "src/design-system/tiles/tiles.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tiles",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "tiles.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "updateItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "input.required<Table['items']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "updateItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TablePaginatorComponent",
                    "type": "component"
                },
                {
                    "name": "TileCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, computed, inject, output } from '@angular/core';\nimport { Item } from '../../shared/item-models.interface';\nimport { TablePaginatorComponent } from '../table/paginator/table-pagination.component';\nimport { TileCardComponent } from './tile-card/tile-card.component';\n\nexport interface Table {\n  items: Item[];\n}\n\n@Component({\n  selector: 'app-tiles',\n  templateUrl: 'tiles.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TablePaginatorComponent, TileCardComponent],\n  standalone: true\n})\nexport class TilesComponent {\n  public items = input.required<Table['items']>();\n  public updateItem = output<Item>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex gap-5 flex-wrap\">\n  @for (item of items(); track item) {\n    <app-tile-card [item]=\"item\" class=\"mb-3 block\" (click)=\"updateItem.emit(item)\"/>\n  }\n</div>\n<app-table-paginator/>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideHttpClient(), ReactiveFormsModule],\n}"
            },
            {
                "name": "iconNames",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/icon/icon.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IconName[]",
                "defaultValue": "ICONS_PATHS.map(({ name }) => name as IconName)"
            },
            {
                "name": "icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/icon/icon.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type[]",
                "defaultValue": "ICONS_PATHS.map(({ name, paths}) => ({ name: name as IconName, paths }))"
            },
            {
                "name": "ICONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/icon/icon.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['first_page', 'last_page', 'arrow_left', 'arrow_right', 'save', 'add', 'grid_view', 'list_view', 'search', 'close'] as const"
            },
            {
                "name": "ICONS_PATHS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/icon/icons-collection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    name: 'last_page',\n    paths: [\n      {\n        d: 'm280-240-56-56 184-184-184-184 56-56 240 240-240 240Zm360 0v-480h80v480h-80Z'\n      }\n    ]\n  },\n  {\n    name: 'first_page',\n    paths: [\n      {\n        d: 'M240-240v-480h80v480h-80Zm440 0L440-480l240-240 56 56-184 184 184 184-56 56Z'\n      }\n    ]\n  },\n  {\n    name: 'arrow_left',\n    paths: [\n      {\n        d: 'M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z'\n      }\n    ]\n  },\n  {\n    name: 'arrow_right',\n    paths: [\n      {\n        d: 'M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z'\n      }\n    ]\n  },\n  {\n    name: 'save',\n    paths: [\n      {\n        d: 'M840-680v480q0 33-23.5 56.5T760-120H200q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h480l160 160Zm-80 34L646-760H200v560h560v-446ZM480-240q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35ZM240-560h360v-160H240v160Zm-40-86v446-560 114Z'\n      }\n    ]\n  },\n  {\n    name: 'add',\n    paths: [\n      {\n        d: 'M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z'\n      }\n    ]\n  },\n  {\n    name: 'grid_view',\n    paths: [\n      {\n        d: 'M120-520v-320h320v320H120Zm0 400v-320h320v320H120Zm400-400v-320h320v320H520Zm0 400v-320h320v320H520Z'\n      }\n    ]\n  },\n  {\n    name: 'list_view',\n    paths: [\n      {\n        d: 'M360-160h440q33 0 56.5-23.5T880-240v-80H360v160ZM80-640h200v-160H160q-33 0-56.5 23.5T80-720v80Zm0 240h200v-160H80v160Zm80 240h120v-160H80v80q0 33 23.5 56.5T160-160Zm200-240h520v-160H360v160Zm0-240h520v-80q0-33-23.5-56.5T800-800H360v160Z'\n      }\n    ]\n  },\n  {\n    name: 'search',\n    paths: [\n      {\n        d: 'M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z'\n      }\n    ]\n  },\n  {\n    name: 'close',\n    paths: [\n      {\n        d: 'm256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'\n      }\n    ]\n  },\n]"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/shared/items.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ItemsState",
                "defaultValue": "{\n  items: [],\n  isLoading: false,\n  error: null,\n  currentPage: 0,\n  itemsPerPage: 5,\n  sort: 'asc',\n  filter: '',\n  view: 'list'\n}"
            },
            {
                "name": "itemsBatch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/shared/utils-sb.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Item[]",
                "defaultValue": "[\n  {\n    id: \"1\",\n    name: \"Red Apple\",\n    description: \"A fresh red apple\",\n    color: \"#FF0000\",\n    _doc: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Thu Jun 27 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user1\"\n  },\n  {\n    id: \"2\",\n    name: \"Green Apple\",\n    description: \"A crisp green apple\",\n    color: \"#00FF00\",\n    _doc: \"Fri Jun 21 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user2\"\n  },\n  {\n    id: \"3\",\n    name: \"Blueberry\",\n    description: \"A bunch of blueberries\",\n    color: \"#0000FF\",\n    _doc: \"Sat Jun 22 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Sat Jun 29 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user3\"\n  },\n  {\n    id: \"4\",\n    name: \"Banana\",\n    description: \"A ripe banana\",\n    color: \"#FFFF00\",\n    _doc: \"Sun Jun 23 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user4\"\n  },\n  {\n    id: \"5\",\n    name: \"Orange\",\n    description: \"A juicy orange\",\n    color: \"#FFA500\",\n    _doc: \"Mon Jun 24 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Mon Jul 01 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user5\"\n  },\n  {\n    id: \"6\",\n    name: \"Grape\",\n    description: \"A bunch of grapes\",\n    color: \"#800080\",\n    _doc: \"Tue Jun 25 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user6\"\n  },\n  {\n    id: \"7\",\n    name: \"Lemon\",\n    description: \"A sour lemon\",\n    color: \"#FFFF00\",\n    _doc: \"Wed Jun 26 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Wed Jul 03 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user7\"\n  },\n  {\n    id: \"8\",\n    name: \"Strawberry\",\n    description: \"A sweet strawberry\",\n    color: \"#FF0000\",\n    _doc: \"Thu Jun 27 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user8\"\n  },\n  {\n    id: \"9\",\n    name: \"Peach\",\n    description: \"A juicy peach\",\n    color: \"#FFDAB9\",\n    _doc: \"Fri Jun 28 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Fri Jul 05 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user9\"\n  },\n  {\n    id: \"10\",\n    name: \"Kiwi\",\n    description: \"A fresh kiwi\",\n    color: \"#7CFC00\",\n    _doc: \"Sat Jun 29 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user10\"\n  },\n  {\n    id: \"11\",\n    name: \"Pineapple\",\n    description: \"A tropical pineapple\",\n    color: \"#FFE135\",\n    _doc: \"Sun Jun 30 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Sun Jul 07 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user11\"\n  },\n  {\n    id: \"12\",\n    name: \"Mango\",\n    description: \"A ripe mango\",\n    color: \"#FF8C00\",\n    _doc: \"Mon Jul 01 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user12\"\n  },\n  {\n    id: \"13\",\n    name: \"Watermelon\",\n    description: \"A juicy watermelon\",\n    color: \"#32CD32\",\n    _doc: \"Tue Jul 02 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Tue Jul 09 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user13\"\n  },\n  {\n    id: \"14\",\n    name: \"Plum\",\n    description: \"A sweet plum\",\n    color: \"#8E4585\",\n    _doc: \"Wed Jul 03 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user14\"\n  },\n  {\n    id: \"15\",\n    name: \"Cherry\",\n    description: \"A bunch of cherries\",\n    color: \"#FF007F\",\n    _doc: \"Thu Jul 04 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Thu Jul 11 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user15\"\n  },\n  {\n    id: \"16\",\n    name: \"Apricot\",\n    description: \"A fresh apricot\",\n    color: \"#FBCEB1\",\n    _doc: \"Fri Jul 05 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user16\"\n  },\n  {\n    id: \"17\",\n    name: \"Raspberry\",\n    description: \"A bunch of raspberries\",\n    color: \"#E30B5D\",\n    _doc: \"Sat Jul 06 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Sat Jul 13 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user17\"\n  },\n  {\n    id: \"18\",\n    name: \"Blackberry\",\n    description: \"A bunch of blackberries\",\n    color: \"#000000\",\n    _doc: \"Sun Jul 07 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user18\"\n  },\n  {\n    id: \"19\",\n    name: \"Cantaloupe\",\n    description: \"A fresh cantaloupe\",\n    color: \"#FFD700\",\n    _doc: \"Mon Jul 08 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Mon Jul 15 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user19\"\n  },\n  {\n    id: \"20\",\n    name: \"Dragon Fruit\",\n    description: \"A vibrant dragon fruit\",\n    color: \"#FF00FF\",\n    _doc: \"Tue Jul 09 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user20\"\n  }\n]"
            },
            {
                "name": "ItemsStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/shared/items.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signalStore(\n  { providedIn: 'root'},\n  withState(initialState),\n  withComputed(({ items, filter, sort, currentPage, itemsPerPage }) => ({\n    processedItems: computed(() => {\n      return items().filter(el => el.name.toLowerCase().includes(filter().toLowerCase())).sort((a, b) => sort() === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name)).slice(currentPage() * itemsPerPage(), (currentPage() + 1) * itemsPerPage())\n    }),\n  })),\n  withMethods((store, httpService = inject(HttpService)) => ({\n    loadAll() {\n      patchState(store, { isLoading: true });\n      httpService.getItems().subscribe({\n        next: (items) => {\n          patchState(store, { items, isLoading: false });\n        },\n        error: (error) => patchState(store, { error, isLoading: false })\n      })\n    },\n    addItem(item: Item) {\n      patchState(store, { isLoading: true });\n      const newItem: Item = { ...item, id: store.items().length.toString(), _cbu: 'John Smith', _doc: new Date().toString() };\n      httpService.addItem(newItem).subscribe({\n        next: () => {\n          patchState(store, (state) => ({ items: state.items.concat(newItem), isLoading: false }));\n        },\n        error: (error) => patchState(store, { error, isLoading: false })\n      })\n    },\n    updateItem(item: Item) {\n      const newItem: Item = {...item, _dlu: new Date().toString() }\n      patchState(store, { isLoading: true });\n      httpService.updateItem(newItem).subscribe({\n        next: () => {\n          patchState(store, (state) => ({ items: state.items.map(i => item.id === i.id ? newItem : i), isLoading: false }));\n        },\n        error: (error) => patchState(store, { error, isLoading: false })\n      })\n    }\n  }))\n)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/title/title.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    content: 'Large title test'\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/color-box/color-box.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorBoxDirective>",
                "defaultValue": "{\n  title: 'Design System/Color box',\n  decorators: [\n    moduleMetadata({\n      imports: [ColorBoxDirective],\n    }),\n  ],  tags: ['autodocs'],\n  argTypes: {\n    color: {\n      control: 'color',\n    },\n    size: {\n      control: 'number'\n    }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/input-field/input-field.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputFieldComponent>",
                "defaultValue": "{\n  title: 'Design System/Input field',\n  component: InputFieldComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    value: {\n      control: 'text',\n    },\n    prefix: {\n      control: 'inline-radio',\n      options: ICONS\n    }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/table.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n  title: 'Design System/Table',\n  component: TableComponent,\n  tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/tiles/tiles.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TilesComponent>",
                "defaultValue": "{\n  title: 'Design System/Tiles',\n  component: TilesComponent,\n  tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/title/title.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppTitleComponent>",
                "defaultValue": "{\n  title: 'Design System/Title',\n  component: AppTitleComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'radio',\n      options: ['small', 'large']\n    },\n    content: {\n      control: 'text'\n    }\n  },\n  parameters: {\n    controls: { exclude: ['textSize', 'textSizes', 'getClasses']}\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/header/table-header.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableHeaderComponent>",
                "defaultValue": "{\n  title: 'Design System/Table/Header',\n  component: TableHeaderComponent,\n  tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/paginator/table-paginator.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TablePaginatorComponent>",
                "defaultValue": "{\n  title: 'Design System/Table/Paginator',\n  component: TablePaginatorComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/row/table-row.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableRowComponent>",
                "defaultValue": "{\n  title: 'Design System/Table/Row',\n  component: TableRowComponent,\n  tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TileCardComponent>",
                "defaultValue": "{\n  title: 'Design System/Tiles/Tile card',\n  component: TileCardComponent,\n  tags: ['autodocs']\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/title/title.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    content: 'Small title test'\n  },\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/color-box/color-box.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args: Story) => ({\n  props: args,\n  template: `<div [appColorBox] [color]=\"color\" [size]=\"size\"></div>`,\n})"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/color-box/color-box.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/icon/icon.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'first_page',\n    size: 32,\n    color: '#ff8300'\n  }\n} satisfies Story"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/input-field/input-field.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/table.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: [{\n      id: '1',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '2',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '3',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '4',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '2',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '3',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '4',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '2',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '3',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '4',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }]\n  },\n}"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/tiles/tiles.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { items },\n}"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/header/table-header.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/paginator/table-paginator.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/table/row/table-row.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    item: {\n      id: '1',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    },\n  },\n}"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    item: {\n      id: '1',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    },\n  },\n}"
            },
            {
                "name": "VariantWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/design-system/input-field/input-field.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    prefix: 'search',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "IconName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/design-system/icon/icon.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 199
            },
            {
                "name": "ItemsState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/shared/items.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorBoxDirective>",
                "file": "src/design-system/color-box/color-box.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Icon>",
                "file": "src/design-system/icon/icon.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputFieldComponent>",
                "file": "src/design-system/input-field/input-field.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "src/design-system/table/table.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TilesComponent>",
                "file": "src/design-system/tiles/tiles.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppTitleComponent>",
                "file": "src/design-system/title/title.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableHeaderComponent>",
                "file": "src/design-system/table/header/table-header.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TablePaginatorComponent>",
                "file": "src/design-system/table/paginator/table-paginator.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableRowComponent>",
                "file": "src/design-system/table/row/table-row.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TileCardComponent>",
                "file": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ViewMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"list\" | \"grid\"",
                "file": "src/shared/item-models.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideHttpClient(), ReactiveFormsModule],\n}"
                }
            ],
            "src/design-system/icon/icon.interface.ts": [
                {
                    "name": "iconNames",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/icon/icon.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconName[]",
                    "defaultValue": "ICONS_PATHS.map(({ name }) => name as IconName)"
                },
                {
                    "name": "icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/icon/icon.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "defaultValue": "ICONS_PATHS.map(({ name, paths}) => ({ name: name as IconName, paths }))"
                },
                {
                    "name": "ICONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/icon/icon.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['first_page', 'last_page', 'arrow_left', 'arrow_right', 'save', 'add', 'grid_view', 'list_view', 'search', 'close'] as const"
                }
            ],
            "src/design-system/icon/icons-collection.ts": [
                {
                    "name": "ICONS_PATHS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/icon/icons-collection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    name: 'last_page',\n    paths: [\n      {\n        d: 'm280-240-56-56 184-184-184-184 56-56 240 240-240 240Zm360 0v-480h80v480h-80Z'\n      }\n    ]\n  },\n  {\n    name: 'first_page',\n    paths: [\n      {\n        d: 'M240-240v-480h80v480h-80Zm440 0L440-480l240-240 56 56-184 184 184 184-56 56Z'\n      }\n    ]\n  },\n  {\n    name: 'arrow_left',\n    paths: [\n      {\n        d: 'M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z'\n      }\n    ]\n  },\n  {\n    name: 'arrow_right',\n    paths: [\n      {\n        d: 'M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z'\n      }\n    ]\n  },\n  {\n    name: 'save',\n    paths: [\n      {\n        d: 'M840-680v480q0 33-23.5 56.5T760-120H200q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h480l160 160Zm-80 34L646-760H200v560h560v-446ZM480-240q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35ZM240-560h360v-160H240v160Zm-40-86v446-560 114Z'\n      }\n    ]\n  },\n  {\n    name: 'add',\n    paths: [\n      {\n        d: 'M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z'\n      }\n    ]\n  },\n  {\n    name: 'grid_view',\n    paths: [\n      {\n        d: 'M120-520v-320h320v320H120Zm0 400v-320h320v320H120Zm400-400v-320h320v320H520Zm0 400v-320h320v320H520Z'\n      }\n    ]\n  },\n  {\n    name: 'list_view',\n    paths: [\n      {\n        d: 'M360-160h440q33 0 56.5-23.5T880-240v-80H360v160ZM80-640h200v-160H160q-33 0-56.5 23.5T80-720v80Zm0 240h200v-160H80v160Zm80 240h120v-160H80v80q0 33 23.5 56.5T160-160Zm200-240h520v-160H360v160Zm0-240h520v-80q0-33-23.5-56.5T800-800H360v160Z'\n      }\n    ]\n  },\n  {\n    name: 'search',\n    paths: [\n      {\n        d: 'M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z'\n      }\n    ]\n  },\n  {\n    name: 'close',\n    paths: [\n      {\n        d: 'm256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'\n      }\n    ]\n  },\n]"
                }
            ],
            "src/shared/items.store.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/shared/items.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ItemsState",
                    "defaultValue": "{\n  items: [],\n  isLoading: false,\n  error: null,\n  currentPage: 0,\n  itemsPerPage: 5,\n  sort: 'asc',\n  filter: '',\n  view: 'list'\n}"
                },
                {
                    "name": "ItemsStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/shared/items.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signalStore(\n  { providedIn: 'root'},\n  withState(initialState),\n  withComputed(({ items, filter, sort, currentPage, itemsPerPage }) => ({\n    processedItems: computed(() => {\n      return items().filter(el => el.name.toLowerCase().includes(filter().toLowerCase())).sort((a, b) => sort() === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name)).slice(currentPage() * itemsPerPage(), (currentPage() + 1) * itemsPerPage())\n    }),\n  })),\n  withMethods((store, httpService = inject(HttpService)) => ({\n    loadAll() {\n      patchState(store, { isLoading: true });\n      httpService.getItems().subscribe({\n        next: (items) => {\n          patchState(store, { items, isLoading: false });\n        },\n        error: (error) => patchState(store, { error, isLoading: false })\n      })\n    },\n    addItem(item: Item) {\n      patchState(store, { isLoading: true });\n      const newItem: Item = { ...item, id: store.items().length.toString(), _cbu: 'John Smith', _doc: new Date().toString() };\n      httpService.addItem(newItem).subscribe({\n        next: () => {\n          patchState(store, (state) => ({ items: state.items.concat(newItem), isLoading: false }));\n        },\n        error: (error) => patchState(store, { error, isLoading: false })\n      })\n    },\n    updateItem(item: Item) {\n      const newItem: Item = {...item, _dlu: new Date().toString() }\n      patchState(store, { isLoading: true });\n      httpService.updateItem(newItem).subscribe({\n        next: () => {\n          patchState(store, (state) => ({ items: state.items.map(i => item.id === i.id ? newItem : i), isLoading: false }));\n        },\n        error: (error) => patchState(store, { error, isLoading: false })\n      })\n    }\n  }))\n)"
                }
            ],
            "src/shared/utils-sb.ts": [
                {
                    "name": "itemsBatch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/shared/utils-sb.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "defaultValue": "[\n  {\n    id: \"1\",\n    name: \"Red Apple\",\n    description: \"A fresh red apple\",\n    color: \"#FF0000\",\n    _doc: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Thu Jun 27 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user1\"\n  },\n  {\n    id: \"2\",\n    name: \"Green Apple\",\n    description: \"A crisp green apple\",\n    color: \"#00FF00\",\n    _doc: \"Fri Jun 21 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user2\"\n  },\n  {\n    id: \"3\",\n    name: \"Blueberry\",\n    description: \"A bunch of blueberries\",\n    color: \"#0000FF\",\n    _doc: \"Sat Jun 22 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Sat Jun 29 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user3\"\n  },\n  {\n    id: \"4\",\n    name: \"Banana\",\n    description: \"A ripe banana\",\n    color: \"#FFFF00\",\n    _doc: \"Sun Jun 23 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user4\"\n  },\n  {\n    id: \"5\",\n    name: \"Orange\",\n    description: \"A juicy orange\",\n    color: \"#FFA500\",\n    _doc: \"Mon Jun 24 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Mon Jul 01 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user5\"\n  },\n  {\n    id: \"6\",\n    name: \"Grape\",\n    description: \"A bunch of grapes\",\n    color: \"#800080\",\n    _doc: \"Tue Jun 25 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user6\"\n  },\n  {\n    id: \"7\",\n    name: \"Lemon\",\n    description: \"A sour lemon\",\n    color: \"#FFFF00\",\n    _doc: \"Wed Jun 26 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Wed Jul 03 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user7\"\n  },\n  {\n    id: \"8\",\n    name: \"Strawberry\",\n    description: \"A sweet strawberry\",\n    color: \"#FF0000\",\n    _doc: \"Thu Jun 27 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user8\"\n  },\n  {\n    id: \"9\",\n    name: \"Peach\",\n    description: \"A juicy peach\",\n    color: \"#FFDAB9\",\n    _doc: \"Fri Jun 28 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Fri Jul 05 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user9\"\n  },\n  {\n    id: \"10\",\n    name: \"Kiwi\",\n    description: \"A fresh kiwi\",\n    color: \"#7CFC00\",\n    _doc: \"Sat Jun 29 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user10\"\n  },\n  {\n    id: \"11\",\n    name: \"Pineapple\",\n    description: \"A tropical pineapple\",\n    color: \"#FFE135\",\n    _doc: \"Sun Jun 30 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Sun Jul 07 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user11\"\n  },\n  {\n    id: \"12\",\n    name: \"Mango\",\n    description: \"A ripe mango\",\n    color: \"#FF8C00\",\n    _doc: \"Mon Jul 01 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user12\"\n  },\n  {\n    id: \"13\",\n    name: \"Watermelon\",\n    description: \"A juicy watermelon\",\n    color: \"#32CD32\",\n    _doc: \"Tue Jul 02 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Tue Jul 09 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user13\"\n  },\n  {\n    id: \"14\",\n    name: \"Plum\",\n    description: \"A sweet plum\",\n    color: \"#8E4585\",\n    _doc: \"Wed Jul 03 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user14\"\n  },\n  {\n    id: \"15\",\n    name: \"Cherry\",\n    description: \"A bunch of cherries\",\n    color: \"#FF007F\",\n    _doc: \"Thu Jul 04 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Thu Jul 11 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user15\"\n  },\n  {\n    id: \"16\",\n    name: \"Apricot\",\n    description: \"A fresh apricot\",\n    color: \"#FBCEB1\",\n    _doc: \"Fri Jul 05 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user16\"\n  },\n  {\n    id: \"17\",\n    name: \"Raspberry\",\n    description: \"A bunch of raspberries\",\n    color: \"#E30B5D\",\n    _doc: \"Sat Jul 06 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Sat Jul 13 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user17\"\n  },\n  {\n    id: \"18\",\n    name: \"Blackberry\",\n    description: \"A bunch of blackberries\",\n    color: \"#000000\",\n    _doc: \"Sun Jul 07 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user18\"\n  },\n  {\n    id: \"19\",\n    name: \"Cantaloupe\",\n    description: \"A fresh cantaloupe\",\n    color: \"#FFD700\",\n    _doc: \"Mon Jul 08 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _dlu: \"Mon Jul 15 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user19\"\n  },\n  {\n    id: \"20\",\n    name: \"Dragon Fruit\",\n    description: \"A vibrant dragon fruit\",\n    color: \"#FF00FF\",\n    _doc: \"Tue Jul 09 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n    _cbu: \"user20\"\n  }\n]"
                }
            ],
            "src/design-system/title/title.stories.tsx": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/title/title.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    content: 'Large title test'\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/title/title.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppTitleComponent>",
                    "defaultValue": "{\n  title: 'Design System/Title',\n  component: AppTitleComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'radio',\n      options: ['small', 'large']\n    },\n    content: {\n      control: 'text'\n    }\n  },\n  parameters: {\n    controls: { exclude: ['textSize', 'textSizes', 'getClasses']}\n  }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/title/title.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    content: 'Small title test'\n  },\n}"
                }
            ],
            "src/design-system/color-box/color-box.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/color-box/color-box.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorBoxDirective>",
                    "defaultValue": "{\n  title: 'Design System/Color box',\n  decorators: [\n    moduleMetadata({\n      imports: [ColorBoxDirective],\n    }),\n  ],  tags: ['autodocs'],\n  argTypes: {\n    color: {\n      control: 'color',\n    },\n    size: {\n      control: 'number'\n    }\n  }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/color-box/color-box.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args: Story) => ({\n  props: args,\n  template: `<div [appColorBox] [color]=\"color\" [size]=\"size\"></div>`,\n})"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/color-box/color-box.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/design-system/input-field/input-field.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/input-field/input-field.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputFieldComponent>",
                    "defaultValue": "{\n  title: 'Design System/Input field',\n  component: InputFieldComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    value: {\n      control: 'text',\n    },\n    prefix: {\n      control: 'inline-radio',\n      options: ICONS\n    }\n  }\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/input-field/input-field.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "VariantWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/input-field/input-field.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    prefix: 'search',\n  },\n}"
                }
            ],
            "src/design-system/table/table.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/table.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n  title: 'Design System/Table',\n  component: TableComponent,\n  tags: ['autodocs']\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/table.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: [{\n      id: '1',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '2',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '3',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '4',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '2',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '3',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '4',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '2',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '3',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }, {\n      id: '4',\n      name: \"second part\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    }]\n  },\n}"
                }
            ],
            "src/design-system/tiles/tiles.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/tiles/tiles.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TilesComponent>",
                    "defaultValue": "{\n  title: 'Design System/Tiles',\n  component: TilesComponent,\n  tags: ['autodocs']\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/tiles/tiles.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { items },\n}"
                }
            ],
            "src/design-system/table/header/table-header.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/header/table-header.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableHeaderComponent>",
                    "defaultValue": "{\n  title: 'Design System/Table/Header',\n  component: TableHeaderComponent,\n  tags: ['autodocs']\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/header/table-header.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "src/design-system/table/paginator/table-paginator.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/paginator/table-paginator.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TablePaginatorComponent>",
                    "defaultValue": "{\n  title: 'Design System/Table/Paginator',\n  component: TablePaginatorComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/paginator/table-paginator.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "src/design-system/table/row/table-row.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/row/table-row.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableRowComponent>",
                    "defaultValue": "{\n  title: 'Design System/Table/Row',\n  component: TableRowComponent,\n  tags: ['autodocs']\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/table/row/table-row.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    item: {\n      id: '1',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    },\n  },\n}"
                }
            ],
            "src/design-system/tiles/tile-card/tile-card.stories.tsx": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TileCardComponent>",
                    "defaultValue": "{\n  title: 'Design System/Tiles/Tile card',\n  component: TileCardComponent,\n  tags: ['autodocs']\n}"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    item: {\n      id: '1',\n      name: \"a title\",\n      description: \"description\",\n      color: \"#1da1f2\",\n      _doc: \"Thu Jun 20 2024 18:14:37 GMT+0300 (Israel Daylight Time)\",\n      _dlu: \"Thu Jun 20 2024 21:14:37 GMT+0300 (Israel Daylight Time)\",\n      _cbu: \"John Smith\"\n    },\n  },\n}"
                }
            ],
            "src/design-system/icon/icon.stories.tsx": [
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/design-system/icon/icon.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'first_page',\n    size: 32,\n    color: '#ff8300'\n  }\n} satisfies Story"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/design-system/icon/icon.interface.ts": [
                {
                    "name": "IconName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/design-system/icon/icon.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 199
                }
            ],
            "src/shared/items.store.ts": [
                {
                    "name": "ItemsState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/shared/items.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/design-system/color-box/color-box.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorBoxDirective>",
                    "file": "src/design-system/color-box/color-box.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/icon/icon.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Icon>",
                    "file": "src/design-system/icon/icon.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/input-field/input-field.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputFieldComponent>",
                    "file": "src/design-system/input-field/input-field.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/table/table.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "src/design-system/table/table.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/tiles/tiles.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TilesComponent>",
                    "file": "src/design-system/tiles/tiles.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/title/title.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppTitleComponent>",
                    "file": "src/design-system/title/title.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/table/header/table-header.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableHeaderComponent>",
                    "file": "src/design-system/table/header/table-header.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/table/paginator/table-paginator.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TablePaginatorComponent>",
                    "file": "src/design-system/table/paginator/table-paginator.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/table/row/table-row.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableRowComponent>",
                    "file": "src/design-system/table/row/table-row.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/design-system/tiles/tile-card/tile-card.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TileCardComponent>",
                    "file": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/shared/item-models.interface.ts": [
                {
                    "name": "ViewMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"list\" | \"grid\"",
                    "file": "src/shared/item-models.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/management-tool/management-tool.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManagementToolComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/design-system/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/design-system/button/button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/design-system/color-box/color-box.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ColorBoxDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/design-system/color-box/color-box.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColorBox",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/design-system/color-box/color-box.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/color-box/color-box.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/color-box/color-box.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icon.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icon.interface.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconNames",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icon.interface.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icon.interface.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icon.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/icon/icons-collection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICONS_PATHS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/input-field/input-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/design-system/input-field/input-field.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputField",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/design-system/input-field/input-field.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/input-field/input-field.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/input-field/input-field.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VariantWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/design-system/modal/modal.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Modal",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/header/table-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/header/table-header.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/header/table-header.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/paginator/table-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TablePaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/paginator/table-paginator.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/paginator/table-paginator.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/row/table-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/row/table-row.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableRow",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/row/table-row.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/row/table-row.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/table.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/table/table.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tile-card/tile-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tile-card/tile-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TileCard",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tile-card/tile-card.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tiles.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TilesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tiles.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tiles.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/tiles/tiles.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/design-system/title/title.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppTitle",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/design-system/title/title.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/title/title.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/design-system/title/title.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/http.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/shared/item-models.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/shared/items.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/shared/items.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ItemsStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/shared/utils-sb.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemsBatch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}